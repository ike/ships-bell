#!/usr/bin/env python3

"""
Ships Bell Audio Watcher - User Space Process
Watches for trigger files and plays audio in proper user session
"""

import os
import time
import subprocess
import sys

# Auto-detect installation directory
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
SHIPS_BELL_DIR = SCRIPT_DIR
TRIGGER_DIR = os.path.expanduser("~/.local/share/ships-bell/triggers")

def play_audio(audio_file):
    """Play audio file with proper user session access."""
    if os.path.exists(audio_file):
        # Kill any existing afplay processes to prevent overlap
        subprocess.run(["pkill", "-f", "afplay"], capture_output=True)
        time.sleep(0.1)
        
        # Play audio in user session
        subprocess.run(["/usr/bin/afplay", audio_file])
    else:
        print(f"Error: Audio file not found: {audio_file}", file=sys.stderr)

def watch_triggers():
    """Watch for trigger files and play corresponding audio."""
    os.makedirs(TRIGGER_DIR, exist_ok=True)
    
    print("Ships Bell Watcher started - watching for audio triggers...")
    print(f"Installation directory: {SHIPS_BELL_DIR}")
    print(f"Trigger directory: {TRIGGER_DIR}")
    
    while True:
        try:
            # Check for trigger files
            double_trigger = os.path.join(TRIGGER_DIR, "double_strike")
            single_trigger = os.path.join(TRIGGER_DIR, "single_strike")
            noon_trigger = os.path.join(TRIGGER_DIR, "noon_strike")
            
            if os.path.exists(double_trigger):
                os.remove(double_trigger)
                play_audio(f"{SHIPS_BELL_DIR}/audio/DoubleStrike.mp3")
                
            if os.path.exists(single_trigger):
                os.remove(single_trigger)
                play_audio(f"{SHIPS_BELL_DIR}/audio/SingleStrike.mp3")
                
            if os.path.exists(noon_trigger):
                os.remove(noon_trigger)
                play_audio(f"{SHIPS_BELL_DIR}/audio/sir-thats-noon.mp3")
                
            time.sleep(0.1)  # Check every 100ms
            
        except KeyboardInterrupt:
            print("\nShips Bell Watcher stopped")
            break
        except Exception as e:
            print(f"Error in watcher: {e}", file=sys.stderr)
            time.sleep(1)

if __name__ == "__main__":
    watch_triggers()